//MKT01RE1 JOB 000000000000,'CONNECT DIRECT      ',CLASS=C,MSGCLASS=C,
//  NOTIFY=&SYSUID
//*
//*      *************************************************************
//*      *                                                           *
//*      * Job name: STAARC1.                                        *
//*      *                                                           *
//*      * Purpose:  To restore C:D statistics files from GDG        *
//*      *           archive so they can be interrogated.            *
//*      *                                                           *
//*      * Date Written: October 2020.                               *
//*      *                                                           *
//*      * Programmer:   John Bradley.                               *
//*      *                                                           *
//*      * Copyright (c) Meerkat Computer Services Limited.          *
//*      *                                                           *
//*      *************************************************************
//*
//*      *************************************************************
//*      *                                                           *
//*      * Amend the next CARD to reflect dataset containing the     *
//*      * statistics parameters and procedures.                     *
//*      *                                                           *
//*      *************************************************************
//*
//JCLLIB1    JCLLIB ORDER=SUPPLIED.PROCLIB
//*
//           EXPORT SYMLIST=(STARTP,
//           CASE,
//           CCODE,
//           DTE,
//           EDATE,
//           EXCLUDE,
//           FNAME,
//           FORMAT,
//           MSG,
//           MSGID,
//           NETMAP,
//           PNAME,
//           PNUM,
//           PROC,
//           RESTDSN,
//           SDATE,
//           SEQ,
//           SERVER,
//           SNODE,
//           STARTT,
//           STOPT,
//           TME,
//           TYPE,
//           USER,
//           ENDP)
//*
//           INCLUDE MEMBER=CDPARMS
//*
//*      *************************************************************
//*      *                                                           *
//*      * ***** WARNING *****                                       *
//*      *                                                           *
//*      * You must set the SDATE and EDATE parameters below         *
//*      * before submission to the start date for statistics        *
//*      * extraction and end date for statistics extraction.        *
//*      *                                                           *
//*      * So if you want to extract statistics from the restored    *
//*      * file from 31st of July 2020 until 02nd of August 2020     *
//*      * you would code:-                                          *
//*      *                                                           *
//*      * SDATE=31/07/2020                                          *
//*      * EDATE=02/08/2020                                          *
//*      *                                                           *
//*      *************************************************************
//*
//           SET DTE=&LYYMMDD
//*
//*  ***** AMEND FOLLOWING TWO CARDS AS DIRECTED ABOVE *****
//*
//           SET SDATE=01/10/2020
//           SET EDATE=02/10/2020
//*
//*  ***** END OF AMENDMENTS *****
//*
//           SET SEQ=&LSEC
//           SET TME=&LHHMMSS
//           SET RESTDSN=&HLQREST..T&TME..D&DTE..S&SEQ
//*
//           SET CCODE=CCODE=(EQ,00)
//           SET EXCLUDE=EXCLUDE=(WTO)
//           SET MSGID=
//           SET PNAME=PNAME=COPYCF
//           SET PNUM=
//           SET SERVER=
//           SET STARTT=
//           SET STOPT=
//           SET USER=
//           SET SNODE=
//           SET TYPE=
//           SET FNAME=
//           SET CASE=CASE=YES
//           SET FORMAT=SUMMARY
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP1 - Runs SORT to build two SYMLIST parameters         *
//*      *         specifying the search date to start from and      *
//*      *         end at when interrogating restored archive file.  *
//*      *                                                           *
//*      *         &SDATE and &EDATE are coded earlier by            *
//*      *         person submitting the job. See comments above.    *
//*      *                                                           *
//*      *************************************************************
//*
//STEP1       EXEC  PGM=SORT
//SYSOUT      DD    SYSOUT=*
//SORTIN      DD    *,SYMBOLS=JCLONLY,DCB=LRECL=80
&SDATE
&EDATE
/*
//SORTOUT     DD    DSN=&&DTCOMP,
//            DISP=(NEW,PASS),
//            SPACE=(TRK,(1,0),RLSE),
//            DCB=(DSORG=PS,LRECL=80,BLKSIZE=0,RECFM=FB)
//SYSIN       DD    *,SYMBOLS=JCLONLY
*
* Copy input but only for 2 records.
*
* OPTION COPY,STOPAFT=2
*
* Modify the input so change from input format date to YYYYMMDD and
* then convert to Julian date format YYYYDDD.
*
* New date is appended to input record starting in byte 81.
*
* INREC  IFOUTLEN=80,
*        IFTHEN=(WHEN=INIT,
*                OVERLAY=(81:4,2,1,2,7,4,1:81,8,Y4W,TOJUL=Y4T,73X))
*
* We then use OUTFIL to build the SYMLIST cards for us.
*
* OUTFIL REMOVECC,NODETAIL,
*                 BUILD=(80X),HEADER1=('STRTDATE,C''',1,7,C''''),
*                             TRAILER1=('ENDDATE,C''',1,7,C'''')
*
  OPTION COPY,STOPAFT=2
  INREC  IFOUTLEN=80,
         IFTHEN=(WHEN=INIT,
                 OVERLAY=(81:4,2,1,2,7,4,1:81,8,Y4W,TOJUL=Y4T,73X))
  OUTFIL REMOVECC,NODETAIL,
                  BUILD=(80X),HEADER1=('STRTDATE,C''',1,7,C''''),
                              TRAILER1=('ENDDATE,C''',1,7,C'''')
/*
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP2 - Execute Connect Direct to list all archived       *
//*      *         statistics from STATDIR dataset and write output  *
//*      *         to temporary dataset.                             *
//*      *                                                           *
//*      *************************************************************
//*
//STEP2       EXEC  CDJCL,
//            COND=(0,LT)
//DMBATCH.DMPRINT DD    DSN=&&TEMP01,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FBA,LRECL=133,BLKSIZE=0,DSORG=PS)
//SYSPRINT    DD    SYSOUT=*
//SYSIN       DD    *
  SIGNON
  INQ    STATDIR
  SIGNOFF
/*
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP3 - We use ICETOOL to perform a variety of work to    *
//*      *         avoid having to do any real programming.          *
//*      *                                                           *
//*      *         SYMNAMES DD contains the output from STEP1.       *
//*      *                                                           *
//*      *         INDD1 DD is the output from STEP2.                *
//*      *                                                           *
//*      *         INDD2 DD is setup so we can build required C:D    *
//*      *         control cards for input to the next step.         *
//*      *                                                           *
//*      *************************************************************
//*
//STEP3       EXEC  PGM=ICETOOL,REGION=2M,COND=(0,LT)
//TOOLMSG     DD    SYSOUT=*
//DFSMSG      DD    SYSOUT=*
//SYMNAMES    DD    DSN=&DTCOMP,DISP=(OLD,DELETE)
//INDD1       DD    DSN=&&TEMP01,DISP=(OLD,DELETE)
//INDD2       DD    *,SYMBOLS=JCLONLY
  ARCHDSN=&RESTDSN..KSDS          -
  ) &FORMAT
/*
//OUTDD1      DD    DSN=&&TEMP02,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS)
//OUTDD2      DD    DSN=&&TEMP03,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=320,BLKSIZE=0,DSORG=PS)
//OUTDD3      DD    DSN=&&TEMP04,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS)
//OUTDD4      DD    DSN=&&TEMP05,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS)
//OUTDD5      DD    DSN=&&TEMP06,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS)
//OUTDD6      DD    DSN=&&TEMP07,
//            DISP=(NEW,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS)
//SPLICE1     DD    DSN=&&SPLICE1,
//            DISP=(MOD,PASS),
//            UNIT=3390,
//            SPACE=(CYL,(1,1),RLSE),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS)
//*
//*      *************************************************************
//*      *                                                           *
//*      * SRTxCNTL uses DFSORT statements to produce required       *
//*      * formats.                                                  *
//*      *                                                           *
//*      *************************************************************
//*
//SRT1CNTL    DD    *,SYMBOLS=JCLONLY
*
* Copy input.
*
  OPTION  COPY
*
* Select required records from INQUIRE STATDIR command.
*
  INCLUDE COND=(2,3,CH,EQ,C'Arc',OR,
                2,3,CH,EQ,C'Old',OR,
                2,3,CH,EQ,C'New',OR,
                2,3,CH,EQ,C'ARC',OR,
                2,3,CH,EQ,C'OLD',OR,
                2,3,CH,EQ,C'NEW')
*
* Remove FBA and make 80 byte record without print control characters.
*
  OUTFIL  FNAMES=OUTDD1,OUTREC=(2,80)
/*
//*
//SRT2CNTL    DD    *,SYMBOLS=JCLONLY
*
* Copy input from SRT1 step.
*
  OPTION COPY
*
* Work on input in group of 4 records at a time. Make 4 records into one
* 320 byte record.
*
  INREC IFTHEN=(WHEN=GROUP,RECORDS=4,PUSH=(321:SEQ=1)),
        IFTHEN=(WHEN=GROUP,BEGIN=(321,1,ZD,EQ,1),PUSH=(81:1,80)),
        IFTHEN=(WHEN=GROUP,BEGIN=(321,1,ZD,EQ,2),PUSH=(161:1,80)),
        IFTHEN=(WHEN=GROUP,BEGIN=(321,1,ZD,EQ,3),PUSH=(241:1,80))
*
* Only extract one reformatted record and put into correct format.
*
  OUTFIL INCLUDE=(321,1,ZD,EQ,4),
         BUILD=(81,80,161,80,241,80,1,80)
/*
//*
//SRT3CNTL    DD    *,SYMBOLS=JCLONLY
*
* Copy input from SRT2 extracting only data we need.
*
  OPTION  COPY
*
* Extract first 196 bytes.
* Extract Julian start year from byte 198 for 4 characters.
* Extract Julian start day from byte 203 for 3 characters.
* Extract Julian end year from byte 278 for 4 characters.
* Extract Julian end day from byte 283 for 3 characters.
*
  INREC   BUILD=(1,196,198,4,203,3,278,4,283,3)
*
* Build output records only containing dates in range we have requested
* in SYMNAMES STARTDATE and ENDDATE parameters. Exclude all other records.
* Write out as 80 byte records.
*
  OUTFIL  FNAMES=OUTDD3,
          OMIT=(197,7,CH,LT,STRTDATE,OR,
                204,7,CH,GT,ENDDATE),
          BUILD=(1:26,44,36X)
/*
//*
//SRT4CNTL    DD    *,SYMBOLS=JCLONLY
*
* Take input from SRT2. Do pretty much what SRT3 did.
* Reason we need this code is if statistics span two files we need to ensure
* we do not miss any dates so we use slightly different selection to ensure
* files that span more than two days get included.
*
  OPTION  COPY
  INREC   BUILD=(1,196,198,4,203,3,278,4,283,3)
  OUTFIL  FNAMES=OUTDD4,
          INCLUDE=(197,7,CH,LE,ENDDATE,AND,
                   197,7,CH,GE,STRTDATE),
          BUILD=(1:26,44,36X)
/*
//*
//SRT5CNTL    DD    *,SYMBOLS=JCLONLY
*
* We then use SPLICE to extract only records we need from SRT3.
*
  OUTREC FIELDS=(1,44,45:C'11')
/*
//*
//SRT6CNTL    DD    *,SYMBOLS=JCLONLY
*
* We then use SPLICE to extract only records we need from SRT4.
*
  OUTREC FIELDS=(1,44,45:C'22')
/*
//*
//SRT7CNTL    DD    *,SYMBOLS=JCLONLY
*
* We build IDCAMS REPRO command to extract the required
* datasets from archive into new ESDS datasets.
*
  OUTFIL FNAMES=OUTDD5,INCLUDE=(45,2,CH,EQ,C'12',OR,
                                45,2,CH,EQ,C'22'),
         OUTREC=(1X,C'REPRO -',72X,/,
                 1X,C'INDATASET(',1,44,C') -',22X,/,
  1X,C'OUTDATASET(&RESTDSN..ESDS)',21X)
/*
//*
//SRT8CNTL    DD    *,SYMBOLS=JCLONLY
*
* We create required extraction parameters.
*
  OPTION COPY
  OUTFIL REMOVECC,
                  HEADER1=(' &CCODE -',/,
                           ' &EXCLUDE -',/,
                           ' &MSGID  -',/,
                           ' &PNAME -',/,
                           ' &PNUM -',/,
                           ' &SERVER -',/,
                           ' &STARTT -',/,
                           ' &STOPT -',/,
                           ' &USER -',/,
                           ' &SNODE -',/,
                           ' &FNAME -',/,
                           ' &CASE -',/,
                           ' &TYPE - '),
                  OUTREC=(1,80)
/*
//*
//*      *************************************************************
//*      *                                                           *
//*      * TOOLIN control cards direct ICETOOL to perform various    *
//*      * tasks and use the SRTxCNTL cards to control DFSORT when   *
//*      * called from ICETOOL.                                      *
//*      *                                                           *
//*      *************************************************************
//*
//TOOLIN      DD    *,SYMBOLS=JCLONLY
*
* Mode for operations is to fail if any errors occur.
*
 MODE   STOP
*
* Next set of statements work on input to create required
* parameters to repro GDGs into ESDS and to build DMBATCH input
* cards.
*
 COPY   FROM(INDD1)   TO(OUTDD1)  USING(SRT1)
 COPY   FROM(OUTDD1)  TO(OUTDD2)  USING(SRT2)
 COPY   FROM(OUTDD2)  TO(OUTDD3)  USING(SRT3)
 COPY   FROM(OUTDD2)  TO(OUTDD4)  USING(SRT4)
 COPY   FROM(OUTDD3)  TO(SPLICE1) USING(SRT5)
 COPY   FROM(OUTDD4)  TO(SPLICE1) USING(SRT6)
 SPLICE FROM(SPLICE1) TO(OUTDD5)  ON(1,44,CH)                        -
        WITH(46,1)    KEEPNODUPS  USING(SRT7)
 COPY   FROM(INDD2)   TO(OUTDD6)  USING(SRT8)
/*
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP4 -                                                   *
//*      *                                                           *
//*      * We execute IDCAMS next to deine new ESDS and KSDS         *
//*      * datasets for statistics archive GDGs to be repro'ed into. *
//*      *                                                           *
//*      *************************************************************
//*
//STEP4       EXEC  PGM=IDCAMS,COND=(0,LT)
//SYSPRINT    DD    SYSOUT=*
//SYSIN       DD    *,SYMBOLS=JCLONLY
  DEFINE CLUSTER                                           -
    (NAME(&RESTDSN..ESDS) -
     CYL(1000 500)                                         -
     VOLUMES(SYS201)                                       -
     NONINDEXED                                            -
     NOIMBED                                               -
     REUSE                                                 -
     RECORDSIZE(275 2048)                                  -
     SHAREOPTIONS(2))                                      -
    DATA                                                   -
     (CONTROLINTERVALSIZE(32768)                           -
      NAME(&RESTDSN..D))
  DEFINE CLUSTER                                           -
    (NAME(&RESTDSN..KSDS) -
     VOLUMES(SYS201)                                       -
     INDEXED                                               -
     NOIMBED                                               -
     REUSE                                                 -
     NOREPLICATE                                           -
     FREESPACE(10 5)                                       -
     KEYS (27 0)                                           -
     RECORDSIZE(32 78)                                     -
     SHAREOPTIONS(2))                                      -
    DATA                                                   -
     (CONTROLINTERVALSIZE(4096)                            -
      CYL(10 1)                                            -
      NAME(&RESTDSN..KSDS.D)) -
    INDEX                                                  -
     (CONTROLINTERVALSIZE(4096)                            -
      NAME(&RESTDSN..KSDS.I))
/*
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP5 -                                                   *
//*      *                                                           *
//*      * We execute IDCAMS next using  REPRO cards created using   *
//*      * ICETOOL to get statistics records ready for extraction.   *
//*      *                                                           *
//*      * ***** WARNING *****                                       *
//*      *                                                           *
//*      * It is possible REPRO will fail with CC=12 if the GDG has  *
//*      * rolled off so be prepared if CC=12 to check if GDG        *
//*      * exists.                                                   *
//*      *                                                           *
//*      *************************************************************
//*
//STEP5       EXEC  PGM=IDCAMS,COND=(0,LT)
//SYSPRINT    DD    SYSOUT=*
//SYSIN       DD    DSN=&&TEMP06,DISP=(OLD,DELETE)
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP6 - DGADBKEY builds KSDS index from ESDS input.       *
//*      *                                                           *
//*      *************************************************************
//*
//STEP6       EXEC  PGM=DGADBKEY,PARM=CONSOLIDATE,COND=(0,LT)
//STEPLIB     DD    DSN=&CDLOAD,DISP=SHR
//ESDS01      DD    DSN=&RESTDSN..ESDS,DISP=SHR
//KSDS01      DD    DSN=&RESTDSN..KSDS,DISP=SHR
//SYSOUT      DD    SYSOUT=*
//*
//*      *************************************************************
//*      *                                                           *
//*      * STEP7 - Executes C:D in batch to interrogate the restored *
//*      *         data. This step is optional as you may just       *
//*      *         want to run the restore and interrogate the       *
//*      *         restored statistics using different criteria.     *
//*      *                                                           *
//*      *************************************************************
//*
//STEP7       EXEC  CDJCL,COND=(0,LT)
//DMBATCH.SYSIN  DD DSN=&HLQSTAT..ARCH.HDR,DISP=SHR
//            DD    DSN=&&TEMP07,DISP=(OLD,DELETE)
//            DD    DSN=&HLQSTAT..ARCH.TRL,DISP=SHR
