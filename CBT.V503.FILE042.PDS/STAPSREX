/* REXX */

/*

   This REXX Exec executes to reformat PS type records so they can
   be processed using DFSORT.

   The records have a format that does not lend itself to extraction
   by DFSORT so rather than writing a full report program I
   modify the records to have '/' in certain positions then DFSORT can
   be used to extract the fields and ICETOOL produces a report for us.

   The program is used in STAPSRPT.

*/

 EOF = "NO"                            /* Set EOF to NO for loop.   */

 DO WHILE EOF = 'NO'                   /* Start loop.               */
   "EXECIO 1 DISKR INPUT"              /* Read single record.       */
   IF RC =  2 THEN                     /* End of file?              */
    DO
     EOF = 'YES'                       /* Flag end of file.         */
     EXIT 0                            /* Get out return code 0.    */
    END

   PULL REC                            /* Not EOF then get record.  */

/*
   We need to extract 1 byte field at byte 133 to get offset to
   fields we want to manipulate.
*/

   OFFSET = X2D(C2X(SUBSTR(REC,133,1)))
   FLD1OFF = OFFSET + 134              /* Set offset to field 1.    */
   FLD2OFF = OFFSET + 142              /* Set offste to field 2.    */
   REC1 = SUBSTR(REC,1,133)            /* Get bytes 1 to 133.       */
   REC2 = '/'                          /* Insert a /.               */
   REC3 = SUBSTR(REC,134,OFFSET)       /* Move variable field in.   */
   REC4 = '/'                          /* Insert a /.               */
   REC5 = SUBSTR(REC,FLD1OFF,8)        /* Pull 8 bytes at offset 1. */
   REC6 = '/'                          /* Insert a /.               */
   REC7 = SUBSTR(REC,FLD2OFF,8)        /* Pull 8 bytes at offset 2. */
   REC8 = '/'                          /* Insert a /.               */

/* Build new record format with '/' delimiters.                     */

   REC = REC1||REC2||REC3||REC4||REC5||REC6||REC7||REC8
   PUSH REC                            /* Put back onto stack.      */
   "EXECIO 1 DISKW OUTPUT"             /* Write new record.         */
  END                                  /* Loop for next record.     */

EXIT 0                                 /* Default finish RC=0.      */
